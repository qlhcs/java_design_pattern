关键词：
    动态选择算法（简化if-else）
适用场景：
    算法很多，需要动态选择算法
    一个对象有很多行为，避免在一个类中使用大量的if-else
    对客户端屏蔽算法实现

优点：
    1、可以灵活增加新的算法，而不影响原来Context和Strategy的代码，符合开闭原则
    2、策略模式提供了管理算法族的办法，公共代码可以提取到抽象策略类
    3、简化了if-else结构，将算法/行为本身分解出来，符合单一职责原则
缺点：
    1、客户端必须知道所有策略类，自行决定使用策略类
    2、无法【同时】在客户端使用多个策略类（可以理解为具体策略类之间不方便协作）
